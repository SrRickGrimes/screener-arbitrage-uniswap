/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  MockUniswapRouter,
  MockUniswapRouterInterface,
} from "../MockUniswapRouter";

const _abi = [
  {
    inputs: [],
    name: "amountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
    ],
    name: "setAmountOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761021a908161001c8239f35b600080fdfe60806040908082526004908136101561001757600080fd5b600092833560e01c91826346ee8d00146101ca57508163d06ca61f14610062575063e21a56021461004757600080fd5b3461005e57602036600319011261005e5735815580f35b5080fd5b905082346101c757816003193601126101c757602490813567ffffffffffffffff918282116101c757366023830112156101c757818601359183831161017c578260051b865193601f19603f8301168501858110878211176101b5578852845285602080950191830101913683116101b1578601905b82821061018e57505085519360608501915081118482101761017c57855260028352818301938536863783511561016b57863585528154908451976001986001101561015a575050858401528451828152925183830181905283860194879390925b8281106101475785870386f35b835187529581019592810192840161013a565b634e487b7160e01b84526032905282fd5b634e487b7160e01b82526032875290fd5b634e487b7160e01b8252604187528482fd5b81356001600160a01b03811681036101ad5781529084019084016100d8565b8480fd5b8380fd5b634e487b7160e01b855260418a528785fd5b80fd5b84903461005e578160031936011261005e57602091548152f3fea2646970667358221220f4c39af8eac0e0d8a80ddf3551ae8d92477cd3524fd36f97e45e99b552666d5e64736f6c63430008180033";

type MockUniswapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUniswapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUniswapRouter__factory extends ContractFactory {
  constructor(...args: MockUniswapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockUniswapRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockUniswapRouter__factory {
    return super.connect(runner) as MockUniswapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUniswapRouterInterface {
    return new Interface(_abi) as MockUniswapRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockUniswapRouter {
    return new Contract(address, _abi, runner) as unknown as MockUniswapRouter;
  }
}
