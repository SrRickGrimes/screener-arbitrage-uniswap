/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  MockUniswapRouter,
  MockUniswapRouterInterface,
} from "../MockUniswapRouter";

const _abi = [
  {
    inputs: [],
    name: "amountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
    ],
    name: "setAmountOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610551806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806346ee8d0014610046578063d06ca61f14610064578063e21a560214610094575b600080fd5b61004e6100b0565b60405161005b9190610171565b60405180910390f35b61007e60048036038101906100799190610383565b6100b6565b60405161008b919061049d565b60405180910390f35b6100ae60048036038101906100a991906104bf565b61014e565b005b60005481565b6060600267ffffffffffffffff8111156100d3576100d26101e2565b5b6040519080825280602002602001820160405280156101015781602001602082028036833780820191505090505b5090508281600081518110610119576101186104ec565b5b6020026020010181815250506000548160018151811061013c5761013b6104ec565b5b60200260200101818152505092915050565b8060008190555050565b6000819050919050565b61016b81610158565b82525050565b60006020820190506101866000830184610162565b92915050565b6000604051905090565b600080fd5b600080fd5b6101a981610158565b81146101b457600080fd5b50565b6000813590506101c6816101a0565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61021a826101d1565b810181811067ffffffffffffffff82111715610239576102386101e2565b5b80604052505050565b600061024c61018c565b90506102588282610211565b919050565b600067ffffffffffffffff821115610278576102776101e2565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102b98261028e565b9050919050565b6102c9816102ae565b81146102d457600080fd5b50565b6000813590506102e6816102c0565b92915050565b60006102ff6102fa8461025d565b610242565b9050808382526020820190506020840283018581111561032257610321610289565b5b835b8181101561034b578061033788826102d7565b845260208401935050602081019050610324565b5050509392505050565b600082601f83011261036a576103696101cc565b5b813561037a8482602086016102ec565b91505092915050565b6000806040838503121561039a57610399610196565b5b60006103a8858286016101b7565b925050602083013567ffffffffffffffff8111156103c9576103c861019b565b5b6103d585828601610355565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61041481610158565b82525050565b6000610426838361040b565b60208301905092915050565b6000602082019050919050565b600061044a826103df565b61045481856103ea565b935061045f836103fb565b8060005b83811015610490578151610477888261041a565b975061048283610432565b925050600181019050610463565b5085935050505092915050565b600060208201905081810360008301526104b7818461043f565b905092915050565b6000602082840312156104d5576104d4610196565b5b60006104e3848285016101b7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122061c11f4e4255377fd32993b60e07d9396e1a78e66f0287d8fb94dec39fa17ccb64736f6c63430008180033";

type MockUniswapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUniswapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUniswapRouter__factory extends ContractFactory {
  constructor(...args: MockUniswapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockUniswapRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockUniswapRouter__factory {
    return super.connect(runner) as MockUniswapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUniswapRouterInterface {
    return new Interface(_abi) as MockUniswapRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockUniswapRouter {
    return new Contract(address, _abi, runner) as unknown as MockUniswapRouter;
  }
}
